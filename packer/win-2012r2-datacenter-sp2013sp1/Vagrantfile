# -*- mode: ruby -*-
# vi: set ft=ruby :

nbox_name       =  ENV['UPLF_VAGRANT_BOX_NAME']      || "uplift-local/win-2012r2-datacenter-sp2013sp1" 
sql_box_name   =  ENV['UPLF_VAGRANT_SQL_BOX_NAME']  || "uplift-local/win-2016-datacenter-app-sql16-latest" 

linked_clone   =  !ENV['UPLF_VAGRANT_LINKED_CLONE'].nil?
machine_folder =  ENV['UPLF_VBMANAGE_MACHINEFOLDER'] || nil

vm_name_client = "client"
vm_name_sql    = "sql" 

uplift = VagrantPlugins::Uplift::Config()

# base uplif configuration
uplift.set_network_range("192.168.10")
uplift.set_config_path("~/.uplift-packer-tests")
uplift.set_vbmanage_machinefolder('all vms', '', machine_folder)

Vagrant.configure("2") do |config|
  
  config.vm.define "#{vm_name_sql}" do | vm_config |   
    
    vm_config.vm.box = sql_box_name
    vm_config.vm.box_check_update = false

    # uplift.set_winrm(vm_name_dc, vm_config)
    uplift.set_default_synced_folder(vm_name_sql, vm_config)
    uplift.set_4Gb(vm_name_sql, vm_config)
    uplift.set_hostname(vm_name_sql, vm_config, vm_name_sql)    
    
    # client 
    uplift.set_client_network(vm_name_sql, vm_config, vm_name_sql)
    uplift.provision_win16_dsc_soe(vm_name_sql, vm_config)
    uplift.provision_dc_join(vm_name_sql, vm_config)

    # complete sql image
    uplift.provision_sql16_complete_image(vm_name_sql, vm_config)

    vm_config.vm.provision "shell", name: "hostname check", inline: "hostname"

    vm_config.vm.provider "virtualbox" do |v|
      v.gui  = false
      
      v.cpus   = 4
      v.memory = 4 * 1024

      v.linked_clone = linked_clone
    end

  end  

  config.vm.define "#{vm_name_client}" do | vm_config |   
    
    vm_config.vm.box = box_name
    vm_config.vm.box_check_update = false

    # uplift - base config
    uplift.set_default_synced_folder(vm_name_client, vm_config)
    uplift.set_4Gb(vm_name_client, vm_config)
    uplift.set_hostname(vm_name_client, vm_config, vm_name_client)   

    # uplift - network, base provision + dc join
    uplift.set_client_network(vm_name_client, vm_config, vm_name_client)

    if !uplift.has_checkpoint?(vm_name_client, 'dsc-soe') 
      uplift.provision_win16_dsc_soe(vm_name_client, vm_config)
      vm_config.vm.provision :uplift_checkpoint, name: 'dsc-soe'
    end

    if !uplift.has_checkpoint?(vm_name_client, 'dc-join') 
      uplift.provision_dc_join(vm_name_client, vm_config)
      vm_config.vm.provision :uplift_checkpoint, name: 'dc-join'
    end

    # complete sharepoint install

    # - pre-setup and fixes
    if !uplift.has_checkpoint?(vm_name_client, 'sp-farm-presetup') 
      uplift.provision_sp13_pre_setup(vm_name_client, vm_config)
      vm_config.vm.provision :uplift_checkpoint, name: 'sp-farm-presetup'
    end

    # - accounts
    if !uplift.has_checkpoint?(vm_name_client, 'sp-accounts') 
      uplift.provision_sp13_sp_accounts(vm_name_client, vm_config)
      vm_config.vm.provision :uplift_checkpoint, name: 'sp-accounts'
    end

    if !uplift.has_checkpoint?(vm_name_client, 'sp-sql-accounts') 
      uplift.provision_sp13_sql_accounts(vm_name_client, vm_config)
      vm_config.vm.provision :uplift_checkpoint, name: 'sp-sql-accounts'
    end

    # - farm creation
    if !uplift.has_checkpoint?(vm_name_client, 'sp-single-server-farm') 
      uplift.provision_sp13_single_server_farm(vm_name_client, vm_config, vm_name_sql)
      vm_config.vm.provision :uplift_checkpoint, name: 'sp-single-server-farm'
    end

    # - default services
    if !uplift.has_checkpoint?(vm_name_client, 'sp-farm-minimal-services') 
      uplift.provision_sp13_minimal_services(vm_name_client, vm_config, vm_name_sql)
      vm_config.vm.provision :uplift_checkpoint, name: 'sp-farm-minimal-services'
    end

    # - post-setup tasks, upgrades 
    if !uplift.has_checkpoint?(vm_name_client, 'sp-farm-post-setup') 
      uplift.provision_sp13_farm_post_setup(vm_name_client, vm_config)
      vm_config.vm.provision :uplift_checkpoint, name: 'sp-farm-post-setup'
    end

    # - default web app
    if !uplift.has_checkpoint?(vm_name_client, 'sp-web-app') 
      uplift.provision_sp13_web_application(vm_name_client, vm_config)
      vm_config.vm.provision :uplift_checkpoint, name: 'sp-web-app'
    end

    # common shortcuts on the desktop
    if !uplift.has_checkpoint?(vm_name_client, 'dsc-shortcuts') 
      uplift.provision_win16_dsc_shortcuts(vm_name_client, vm_config)
      vm_config.vm.provision :uplift_checkpoint, name: 'dsc-shortcuts'
    end

    # general check
    vm_config.vm.provision "shell", name: "hostname check", inline: "hostname"

    vm_config.vm.provider "virtualbox" do |v|
      v.linked_clone = linked_clone
    end

  end  

end